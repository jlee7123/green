{"remainingRequest":"C:\\Users\\admin\\Desktop\\github\\green\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\github\\green\\src\\components\\approval.vue?vue&type=template&id=2b5f58d3&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\github\\green\\src\\components\\approval.vue","mtime":1667975430737},{"path":"C:\\Users\\admin\\Desktop\\github\\green\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667198110248},{"path":"C:\\Users\\admin\\Desktop\\github\\green\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1667198119828},{"path":"C:\\Users\\admin\\Desktop\\github\\green\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667198110248},{"path":"C:\\Users\\admin\\Desktop\\github\\green\\node_modules\\vue-loader\\lib\\index.js","mtime":1667198119828}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}