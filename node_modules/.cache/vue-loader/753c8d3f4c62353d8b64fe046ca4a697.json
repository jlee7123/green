{"remainingRequest":"C:\\Users\\admin\\Desktop\\github\\green\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\github\\green\\src\\components\\createRS.vue?vue&type=template&id=75fbc1cd&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\github\\green\\src\\components\\createRS.vue","mtime":1667283192256},{"path":"C:\\Users\\admin\\Desktop\\github\\green\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667198110248},{"path":"C:\\Users\\admin\\Desktop\\github\\green\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1667198119828},{"path":"C:\\Users\\admin\\Desktop\\github\\green\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667198110248},{"path":"C:\\Users\\admin\\Desktop\\github\\green\\node_modules\\vue-loader\\lib\\index.js","mtime":1667198119828}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}